Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if((l1 == null) && (l2 == null)){
            return null;
        }
        else if(l1 == null) return l2;
        else if(l2 == null) return l1;
        else{
            int initVal = l1.val > l2.val? l2.val : l1.val;
            ListNode begin = new ListNode(initVal);
            ListNode head = begin;
            
            while((l1 != null) && (l2 != null)){
                if(l1.val <= l2.val){
                    begin.next = l1;
                    l1 = l1.next;
                    begin = begin.next;
                }
                else{
                    begin.next = l2;
                    l2 = l2.next;
                    begin = begin.next;
                }
            }
            
            if(l2 != null){
                begin.next = l2;
            }
            if(l1 != null){
                begin.next = l1;
            }
            return head.next;
        }
    }
}

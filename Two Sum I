Follow - Up 
Question 1: Two Sum

Answer 1 (Brute Force):
Time: O(N^2)
public class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] a = new int[2];
        for (int i = 0; i < nums.length; i++) {
                for (int j = i + 1; j < nums.length; j++) {
                    if (nums[i] + nums[j] == target) {
                        a[0] = i;
                        a[1] = j;
                        break;
                    }
                }
        }
        return a;
    }
}

Answer 2 (HashMap):
Time O(N)
class Solution {
    public int[] twoSum(int[] nums, int target) {
        if (nums == null || nums.length == 0) {
            return null;
        }
        int[] ans = new int[2];
        HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
        int diff = 0;
        hm.put(nums[0], 0);
        for (int i = 1; i < nums.length; i++){
            diff = target - nums[i];
            if(hm.containsKey(diff)) {
                ans[0] = hm.get(diff);
                ans[1] = i;
                return ans;
            }
            else{
                hm.put(nums[i], i);
            }
        }
        return ans;
    }
}

